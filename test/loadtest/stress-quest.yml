config:
  target: 'http://localhost:8300'  # Cambia si tu API corre en otro puerto
  phases:
    - duration: 65  #  duración de la prueba en segundos
      arrivalRate: 1  # 2 usuarios virtuales por segundo
      name: "Calentamiento - 1 quests por segundo"
    - duration: 10  # duración de la prueba en segundos
      arrivalRate: 2 # 5 usuarios virtuales por segundo
      name: "Carga media - 2 quests por segundo"
    - duration: 5  # duración de la prueba en segundos
      arrivalRate: 3  # 10 usuarios virtuales por segundo
      name: "Carga pico - 3 quests por segundo"
  payload:
    path: './quests.csv'  # Datos de entrada para cada request
    fields:
      - "patientName"
      - "patientDni"
      - "jsonQuest"
      - "questType"
    cast: false
    order: sequence
    recycle: true
    skipHeader: true
  defaults:
    headers:
      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IkNDNzI2NUEwLURBQjAtNDI5Mi04QkE2LTBEMzBBRDQ5MTRDNCIsInVzZXJuYW1lIjoiZHBydWViYWQiLCJlbWFpbCI6ImRwcnVlYmFjQGdtYWlsLmNvbSIsInJvbGVzIjoiMiIsImlhdCI6MTc1NTQ2NjAwNiwiZXhwIjoxNzU1NDY5NjA2LCJqdGkiOiI3NGZhZGUyMC00MWQ3LTQ5YzQtYTA3ZC04ODU1OTNhMDJlMWIifQ.YpPBKLJGRKvjh8HFD_0d4KHvpvVZBXnG-kQRf9HP2h8'  # Sustituye por un token válido
      Content-Type: 'application/json'
  http:
    timeout: 15           # Tiempo máximo de espera (segundos)
    maxSockets: 500       # Para evitar límite de conexiones
    pool: 200            # Mantener conexiones abiertas
    enableHttp2: false
  processor: './questprocessor.js'
  ensure:
    # Validaciones para saber si realmente llegaron todas las requests
    http.requests: 60
    errors.rate: 0.1  
scenarios:
  - name: Crear cuestionario
    flow:
      - log: "Enviando request con DNI: {{ patientDni }}"
      - post:
          url: '/quests/create'
          json:
            patientName: "{{ patientName }}"
            patientDni: "{{ patientDni }}"
            jsonQuest: "{{ jsonQuest }}"
            pdfName: "FAKE-NAME-{{ patientDni }}.pdf"
            questType: "{{ questType }}"
          capture:
            - json: "$"
              as: "response_body"
          afterResponse: "logAfterResponse"
      - log: "Request completada para DNI: {{ patientDni }}"